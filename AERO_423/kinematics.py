# -*- coding: utf-8 -*-
"""kinematics.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mQReIfPip5TVcwgZRPBkHXlQQBcAsHZn
"""

# ------ #2 part b, c, d ------
from numpy import matrix, pi, sin, cos
from numpy.linalg import det

# angles
th1, th2, th3 = pi/15, pi/6, pi/2

# individual rotations
C_GI = matrix([[ cos(th1), sin(th1), 0],
               [-sin(th1), cos(th1), 0],
               [ 0       , 0       , 1]])

C_HG = matrix([[1, 0       ,  0       ],
               [0, cos(th2), -sin(th2)],
               [0, sin(th2),  cos(th2)]])

C_BH = matrix([[ cos(th3), sin(th3), 0],
              [-sin(th3), cos(th3), 0],
              [ 0       , 0       , 1]])

# 3-1-3
C_BI = C_BH*C_HG*C_GI

v_B = matrix([[-3],
              [-4],
              [-5]])

v_I = C_BI.T*v_B

print("DCM:")
print(C_BI)
print()
print("det:")
print(det(C_BI))
print()
print("v_I:")
print(v_I)

# ----- part a, e ----------
from sympy import symbols, sin, cos, Matrix
from numpy.linalg import inv

# angles and velocities
th1, th2, th3 = symbols("th1, th2, th3")
dth1, dth2, dth3 = symbols("dth1, dth2, dth3")

# individual rotations
C_GI = Matrix([[ cos(th1), sin(th1), 0],
               [-sin(th1), cos(th1), 0],
               [ 0       , 0       , 1]])

C_HG = Matrix([[1, 0       , 0       ],
               [0,  cos(th2), sin(th2)],
               [0, -sin(th2), cos(th2)]])

C_BH = Matrix([[ cos(th3), sin(th3), 0],
               [-sin(th3), cos(th3), 0],
               [ 0       , 0       , 1]])

# 3-1-3
C_BI = C_BH*C_HG*C_GI

# velocities in each frame
dth1_G = Matrix([[0],
                 [0],
                 [dth1]])

dth2_H = Matrix([[dth2],
                 [0],
                 [0]])

dth3_B = Matrix([[0],
                 [0],
                 [dth3]])

w_B = C_BH*C_HG*dth1_G + C_BH*dth2_H + dth3_B

# velocities for kinematics
w_mixed = Matrix([[dth1],
                  [dth2],
                  [dth3]])

# kinematic coeff mat
coeff_mat = matrix([[sin(th2)*sin(th3),  cos(th3), 0],
                    [sin(th2)*cos(th3), -sin(th3), 0],
                    [cos(th2)         ,  0       , 1]])

print("DCM:")
print(C_BI)
print()
print("w_B:")
print(w_B)
print()
print("kineatic forward transformation matrix:")
print(coeff_mat)
print()
print("kineatic forward transformation matrix:")